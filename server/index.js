const express = require('express');
const path = require('path');

const PORT = 3001;

const reactRenderer = require('./react-renderer');
const routes = ['/', '/page'];

/**
 * initialize the application and create the routes
 */
const app = express();
const proxy = require('http-proxy-middleware');
/**
 * "/path-in-out-routes-arr" should always serve our server rendered page;
 * otherwise, continue with next handlers
 */


app.use(['/api'], function (req, res, next) {
  let options = {
    target:   'https://hn.algolia.com',
    method: req.method || 'GET',
    changeOrigin: true,
    logLevel: 'debug'
  };
  res.set('Access-Control-Allow-Origin', '*');
  proxy(options)(req, res, next);
});

app.get('/*', reactRenderer.render(routes));

/**
 * Set the location of the static assets (ie the js bundle generated by webapck)
 */
app.use(express.static(path.resolve(__dirname, '../build')))
app.use(express.static(path.resolve(__dirname, '../public')))



/**
 * Since this is the last non-error-handling
 * middleware use()d, we assume 404, as nothing else
 * responded.
 */
app.use(reactRenderer.render(routes));

app.listen(PORT, () => console.log(`Example app listening on port ${PORT}!`));